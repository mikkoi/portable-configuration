# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

echo "Entering portable-configuration/.bashrc_after"

# Read in bashrc.
[[ "${BASH_PROFILE_PORTABLE_EXECUTED}" == "" && -r ~/.bash_profile ]] && . ~/.bash_profile

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
#[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto --human-readable --classify'
    alias ll='ls --color=auto --almost-all -l --author -t --reverse --human-readable --classify'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    #alias grep='grep --color=auto'
    #alias fgrep='fgrep --color=auto'
    #alias egrep='egrep --color=auto'
fi

# some more ls aliases
#alias ll='ls -l'
#alias la='ls -A'
#alias l='ls -CF'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# autojump
# [[ -s /home/mikko/.autojump/etc/profile.d/autojump.sh ]] && source /home/mikko/.autojump/etc/profile.d/autojump.sh

# vimpager and vimcat
#alias less=$PAGER
#alias zless=$PAGER

if [ ! -d "${HOME}/other/github" ]; then
  mkdir -p "${HOME}/other/github"
fi

source "${HOME}/portable-configuration/git-dir-colors.sh"

# Solarized colours for command ls, etc.

if [ -f "${HOME}/other/github/dircolors-solarized/dircolors.ansi-light" ]; then
   eval "$(dircolors "${HOME}/other/github/dircolors-solarized/dircolors.ansi-light")"
else
  mkdir -p "${HOME}/other/github"
  git clone https://github.com/seebi/dircolors-solarized "${HOME}/other/github/dircolors-solarized"
  eval "$(dircolors "${HOME}/other/github/dircolors-solarized/dircolors.ansi-light")"
fi

#(command -v ${HOME}/other/github/ninja/ninja >/dev/null 2>&1 && export PATH=${PATH}:~/other/github/ninja) || { echo >&2 "I require ninja but it's not installed."; }
command -v ninja >/dev/null 2>&1 || { echo >&2 "I require ninja but it's not installed."; }
#export PATH=${PATH}:~/other/github/cppcheck

# JAVA paths
#export JAVA_HOME="${HOME}/jdk1.7.0_65"
#export PATH="$JAVA_HOME/bin:$PATH"

(command -v "${HOME}/.anyenv/bin/anyenv" >/dev/null 2>&1 ) || { git clone https://github.com/riywo/anyenv "${HOME}/.anyenv"; }
export PATH="$HOME/.anyenv/bin:$PATH" && eval "$(anyenv init -)"

(command -v vimcat >/dev/null 2>&1 ) || { cd "${HOME}/other/github/vimpager"; git clone https://github.com/rkitover/vimpager.git; cd vimpager; make PREFIX="${HOME}" install; }

( command -v curl >/dev/null 2>&1 ) || { echo >&2 "Please install curl."; }

# vimpager and vimcat
#export PAGER=/usr/local/bin/vimpager

alias githist="git hist | head -20"

# shellcheck disable=SC2034
BASHRC_PORTABLE_EXECUTED=1
echo "Exiting portable-configuration/.bashrc_after"

